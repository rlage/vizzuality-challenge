{"version":3,"file":"static/webpack/static/development/pages/index.js.926475ef56b0e4bef572.hot-update.js","sources":["webpack:///./pages/index.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Chart } from '../components/Chart';\nimport Headline from '../components/Headline';\nimport Basic from '../components/Basic';\nimport Gradient from '../components/Gradient';\nimport Choropleth from '../components/Choropleth';\nimport { useChartDimensions } from '../components/utils';\nimport styles from './index.module.css'\nimport InfoModal from '../components/InfoModal/InfoModal';\n\nconst Index = () => {\n  const [data, setData] = useState(null);\n  useEffect(() => {\n    async function fetchData() {\n      const result = await axios(\n        'https://raw.githubusercontent.com/Vizzuality/front-end-code-challenge/master/data.json',\n      );\n      let dataObject = {};\n      result.data.forEach(d => d.type !== 'timeline' ? dataObject[d.type] = d : null)\n      setData(dataObject);\n    }\n    fetchData();\n  }, []);\n\n  const [ref, dimensions] = useChartDimensions();\n  const [showModal, setShowModal] = useState({\n    'layer': null,\n    'display': false,\n  });\n  const updateShowModal = (name) => {\n    setShowModal(\n      {\n        'layer': name,\n        'display': !display,\n      }\n    )\n  }\n  console.log(showModal)\n  return (\n    <div className={styles.app} ref={ref}>\n      {data ? \n        <>\n          <Headline data={data.basic} setShowModal={updateShowModal}>\n            <Chart cssClass='basic' dimensions={dimensions}>\n              <Basic data={data.basic} />\n            </Chart>\n          </Headline>\n          <Headline data={data.gradient} setShowModal={updateShowModal}>\n            <Chart cssClass='gradient' dimensions={dimensions}>\n              <Gradient data={data.gradient} width={dimensions.boundedWidth}/>\n            </Chart>\n          </Headline>\n          <Headline data={data.choropleth} setShowModal={updateShowModal}>\n            <Chart cssClass='choropleth' dimensions={dimensions}>\n              <Choropleth data={data.choropleth} width={dimensions.boundedWidth}/>\n            </Chart>\n          </Headline>\n          <InfoModal content={data.basic.description} display={showModal.display} />\n        </>\n        :\n        null\n      }\n    </div>\n  );\n}\n\nexport default Index;"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AAGA;AACA;AAAA;AAAA;AACA;AACA;AAPA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAOA;AACA;AACA;AAbA;AAAA;AAAA;AAAA;AACA;AADA;AAgBA;AACA;AAFA;AAfA;AAAA;AACA;AAkBA;AACA;AAEA;AACA;AAFA;AAKA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AACA;AACA;;;;A","sourceRoot":""}