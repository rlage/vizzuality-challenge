{"version":3,"file":"static/webpack/static/development/pages/index.js.7715be41dbb3e9a30a1c.hot-update.js","sources":["webpack:///./pages/index.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Chart } from '../components/Chart';\nimport Headline from '../components/Headline';\nimport Basic from '../components/Basic';\nimport Gradient from '../components/Gradient';\nimport Choropleth from '../components/Choropleth';\nimport { useChartDimensions } from '../components/utils';\nimport styles from './index.module.css'\n\nconst Index = () => {\n  const [data, setData] = useState({});\n  useEffect(() => {\n    async function fetchData() {\n      const result = await axios(\n        'https://raw.githubusercontent.com/Vizzuality/front-end-code-challenge/master/data.json',\n      );\n      let dataObject = {};\n      result.data.forEach(d => d.type !== 'timeline' ? dataObject[d.type] = d : null)\n      setData(dataObject);\n    }\n    fetchData();\n  }, []);\n  console.log(data);\n  const [ref, dimensions] = useChartDimensions();\n  return (\n    <div className={styles.app} ref={ref}>\n      <Headline data={data.basic}>\n        <Chart cssClass='basic' dimensions={dimensions}>\n          <Basic data={data.basic} />\n        </Chart>\n      </Headline>\n      <Headline data={data.gradient}>\n        <Chart cssClass='gradient' dimensions={dimensions}>\n          <Gradient data={data.gradient} width={dimensions.boundedWidth}/>\n        </Chart>\n      </Headline>\n      <Headline data={data.choropleth}>\n        <Chart cssClass='choropleth' dimensions={dimensions}>\n          <Choropleth data={data.choropleth} width={dimensions.boundedWidth}/>\n        </Chart>\n      </Headline>\n    </div>\n  );\n}\n\nexport default Index;"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AAGA;AACA;AAAA;AAAA;AACA;AACA;AAPA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAOA;AACA;AACA;AACA;AAdA;AAAA;AAAA;AAAA;AACA;AAcA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;;;;A","sourceRoot":""}